{
  "name": "unionize",
  "version": "1.0.1",
  "description": "Boilerplate-free functional sum types in TypeScript",
  "repository": "https://github.com/pelotom/unionize",
  "author": "Tom Crockett <pelotom@gmail.com>",
  "license": "MIT",
  "main": "lib/index.js",
  "types": "./lib/index.d.ts",
  "scripts": {
    "build": "tsc --pretty",
    "test": "jest --no-cache --verbose --coverage",
    "test:watch": "jest --watch"
  },
  "devDependencies": {
    "@types/jest": "^21.1.8",
    "coveralls": "^3.0.0",
    "jest": "^21.2.1",
    "ts-jest": "^21.2.4",
    "typescript": "^2.6.2"
  },
  "jest": {
    "verbose": false,
    "testRegex": ".*/*.spec.ts$",
    "moduleFileExtensions": [
      "js",
      "ts"
    ],
    "transform": {
      "\\.ts$": "<rootDir>/node_modules/ts-jest/preprocessor"
    },
    "mapCoverage": true,
    "testEnvironment": "node"
  }
}
